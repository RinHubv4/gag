-- References
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Window initialization assumed done before this block

-- ===== PET SPAWNER TAB =====
local PetTab = Window:CreateTab("Pet Spawner", 136232391555861)
PetTab:CreateSection("Pet Spawner")

local petName = "Raccoon"
local petWeight = 1
local petAge = 1

PetTab:CreateInput({
    Name = "Pet Name",
    PlaceholderText = "Raccoon",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        petName = value
    end
})

PetTab:CreateInput({
    Name = "Pet Weight",
    PlaceholderText = "1",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        petWeight = tonumber(value) or 1
    end
})

PetTab:CreateInput({
    Name = "Pet Age",
    PlaceholderText = "1",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        petAge = tonumber(value) or 1
    end
})

PetTab:CreateButton({
    Name = "Spawn",
    Callback = function()
        local success, petList = pcall(function()
            return require(ReplicatedStorage.Data.PetRegistry.PetList)
        end)

        if success then
            local petData = petList[petName]
            if petData then
                -- Example placeholder for spawn logic
                print("Spawning pet: " .. petName .. ", Weight: " .. petWeight .. ", Age: " .. petAge)
                -- Insert actual spawning logic here
            else
                warn("Pet not found: " .. petName)
            end
        else
            warn("Failed to load PetRegistry")
        end
    end
})

-- ===== SEED SPAWNER TAB =====
local SeedTab = Window:CreateTab("Seed Spawner", 111869302762063)
SeedTab:CreateSection("Seed Spawner")

local seedName = ""

SeedTab:CreateInput({
    Name = "Seed Name",
    PlaceholderText = "Carrot",
    CurrentValue = "",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        seedName = value
    end
})

SeedTab:CreateButton({
    Name = "Spawn",
    Callback = function()
        if not seedName or seedName == "" then
            warn("Please enter a valid seed name")
            return
        end

        local success, seedDataModule = pcall(function()
            return require(ReplicatedStorage.Data.SeedData)
        end)

        if not success then
            warn("Failed to load SeedData module")
            return
        end

        local seedData = seedDataModule[seedName]
        if not seedData then
            warn("Seed not found: " .. seedName)
            return
        end

        local quantity = 1
        local tool = Instance.new("Tool")
        tool.Name = seedData.SeedName .. " [X" .. quantity .. "]"
        tool:SetAttribute("ItemType", "Holdable")
        tool:SetAttribute("SeedName", seedName)
        tool:SetAttribute("Quantity", quantity)

        local seedModel = ReplicatedStorage:WaitForChild("Seed_Models"):FindFirstChild(seedName)
        if seedModel then
            local handle = seedModel:Clone()
            handle.Name = "Handle"
            handle.Parent = tool
        else
            warn("Seed model not found: " .. seedName)
            return
        end

        -- Optional: tool grip positioning
        tool.Equipped:Connect(function()
            local handle = tool:FindFirstChild("Handle")
            if handle then
                tool.Grip = CFrame.new(0, -1, 0)
                tool.GripForward = Vector3.new(0, 0, -1)
                tool.GripRight = Vector3.new(1, 0, 0)
                tool.GripUp = Vector3.new(0, 1, 0)
            end
        end)

        tool.Parent = LocalPlayer.Backpack
        print("Spawned seed: " .. seedName)
    end
})
